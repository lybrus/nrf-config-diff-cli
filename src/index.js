import parse from './include'
import fs from 'fs'
import path from 'path'
import inquirer from 'inquirer'

const cwd = process.cwd()
const sdkConfigFile = 'sdk_config.h'
const appConfigFile = 'app_config.h'

const files = fs.readdirSync(cwd)
const nrfSdkPath = process.env.NRF_SDK

if (!nrfSdkPath) {
    console.error(`environment variable NRF_SDK isn't set`)
    process.exit(1)
}

const baseConfigPath = path.join(nrfSdkPath, '/config/nrf52840/config/sdk_config.h')
const appConfigPath = path.join(cwd, appConfigFile)

if (files.indexOf(sdkConfigFile) === -1) {
    console.error('sdk_config.h not found in current directory')
    process.exit(1)
}

const filePath = path.join(cwd, sdkConfigFile)

;(async () => {
    const baseConfig = parse(baseConfigPath)
    const currentConfig = parse(filePath)
    const changed = []
    const unknown = []

    for (const key in baseConfig) {
        const value = currentConfig[key]
        if (currentConfig[key] && value !== baseConfig[key]) {
            changed.push({ key, value })
        }
    }

    for (const key in currentConfig) {
        const value = currentConfig[key]
        if (baseConfig[key] === undefined) {
            unknown.push({ key, value })
        }
    }

    if (fs.existsSync(appConfigPath)) {
        const { override } = await inquirer.prompt([{
            type: 'confirm',
            name: 'override',
            message: 'app_file.h is exists, do you want to override it?',
            default: false
        }])

        if (!override) process.exit(0)
    }

    fs.writeFileSync(appConfigPath, `/* Generated by nrf-config-diff-cli */

#ifndef APP_CONFIG_H__
#define APP_CONFIG_H__

#define USE_APP_CONFIG

/* Changed variables */
${ changed.map(({ key, value }) => `#define ${ key } ${ value }`).join('\n') }
${ unknown.length ? `
/* Unknown variables */
${ unknown.map(({ key, value }) => `#define ${ key} ${ value }`).join('\n') }
` : '' }
#endif // APP_CONFIG_H__
`, 'utf-8')

    console.log('Diff written to ', appConfigPath)
})()
